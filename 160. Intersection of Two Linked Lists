# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution(object):
    def getIntersectionNode(self, headA, headB):
        a , b = headA, headB
        while a != b:
            a = a.next if a else headB
            b = b.next if b else headA
        return a

#use Extra memory which is not allow 
        # new_listA = []
        # new_listB = []
        # while headA:
        #     new_listA.append(headA)
        #     headA = headA.next
        # new_listB = []
        # while headB:
        #     new_listB.append(headB)
        #     headB = headB.next
        # for i in new_listA:
        #     if i in new_listB:
        #         return i
        # return None
            



            



        
