class Solution(object):
    def removeDuplicates(self, nums):
        # Initialize the left pointer to track the position of unique elements
        left = 1
        
        # Iterate through the list starting from the second element
        for right in range(1, len(nums)):
            # Check if the current element is different from the previous one
            if nums[right] != nums[right - 1]:
                # Update the position of the unique element
                nums[left] = nums[right]
                # Move the left pointer forward
                left += 1
        
        # Return the length of the array with unique elements
        return left
